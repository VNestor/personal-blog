<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Gatsby Starter Blog RSS Feed]]></title><description><![CDATA[Victor Nestor's peronal blog using the starter blog template from Gatsby!]]></description><link>https://vnestor.github.io/personal-blog</link><generator>GatsbyJS</generator><lastBuildDate>Thu, 17 Mar 2022 03:05:49 GMT</lastBuildDate><item><title><![CDATA[Introduction To Git, Basics Commands, And Terminology]]></title><description><![CDATA[Introduction If you are just getting started on your programming journey, you will soon realize that you will constantly find yourself…]]></description><link>https://vnestor.github.io/personal-blog/my-second-post/</link><guid isPermaLink="false">https://vnestor.github.io/personal-blog/my-second-post/</guid><pubDate>Sat, 12 Mar 2022 00:00:00 GMT</pubDate><content:encoded>&lt;h2&gt;Introduction&lt;/h2&gt;
&lt;p&gt;If you are just getting started on your programming journey, you will soon realize that you will constantly find yourself cloning, adding files, committing changes, and much more. You also might be asking yourself, “what do those words mean!?”, no worries! I’ll be giving an short introduction to what they mean what’s possible with Git!&lt;/p&gt;
&lt;h2&gt;What’s the difference?&lt;/h2&gt;
&lt;p&gt;You might be asking yourself, “wait, this doesn’t look like GitHub!”, and you’re right. Git is a version control system. GitHub is a cloud-based hosting service.&lt;/p&gt;
&lt;p&gt;A &lt;strong&gt;version control system&lt;/strong&gt; is software that helps you control (or manage) the different versions of something, in our it’s source code.&lt;/p&gt;
&lt;p&gt;A &lt;strong&gt;cloud-based hosting service&lt;/strong&gt; is a platform that hosts infrastructures, platforms, or software by third-party providers. GitHub is a code hosting platform for version control and collaboration.&lt;/p&gt;
&lt;p&gt;Git is a version control tool.&lt;/p&gt;
&lt;p&gt;GitHub is a service that hosts Git projects.&lt;/p&gt;
&lt;p&gt;A source code manager (abbreviated as SCM) is another name for a version control system.&lt;/p&gt;
&lt;p&gt;Git is a SCM, and therefore a version control system (abbreviated as VCS)! You can check out Git’s website &lt;a href=&quot;https://git-scm.com/&quot;&gt;here&lt;/a&gt;.
Notice how it has SCM directly in its domain.&lt;/p&gt;
&lt;h2&gt;Version Control Systems&lt;/h2&gt;
&lt;p&gt;The main point of a version control system is to &lt;strong&gt;help maintain a detailed history of the project as well as the ability to work on different version of it&lt;/strong&gt;. Having a detailed history of a project is important because it lets you see the progress of the project over time. If needed, you can also jump back to any point in the project to recover data or files. This is helpful because you can revert files back to a previous state, revert the entire project back to a previous state, review changes made over time, see who last modified something that might be causing a problem, who introduced an issue and when, and much more!&lt;/p&gt;
&lt;p&gt;Since we are focusing on Git, we will go into version control systems. There are two types of version control system models:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;The centralized model&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;All users connect to a central, master repository&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;The distributed model&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Each user has the entire repository on their computer.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Git is a distributed version control system.&lt;/p&gt;
&lt;p&gt;You actually use version control in your everyday life, kind of, and no I’m not talking about Git. When you’re working with documents, like a Google Doc, you’re sort of maintaining different versions of a document as you write it. You’re not &lt;em&gt;actively&lt;/em&gt; maintaining the document, but you’re computer is keeping track of the different version for you. Back to the Google Doc, have you ever noticed the small gray text at the top that tells you about the status of the document? Ever noticed that as you type, it’s actively saving the document? Then, when you’re finished typing, it tells you that the document has been saved. That’s revision history, it’s sort of like version control but it’s not powerful enough.&lt;/p&gt;
&lt;p&gt;What make version control a better option?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The ability to label a change.&lt;/li&gt;
&lt;li&gt;The ability to give a detailed explanation of why a change was made.&lt;/li&gt;
&lt;li&gt;The ability to move between different versions of the same document.&lt;/li&gt;
&lt;li&gt;The ability to undo a change &lt;strong&gt;A&lt;/strong&gt;, make edit &lt;strong&gt;B&lt;/strong&gt;, then get back change &lt;strong&gt;A&lt;/strong&gt; without affecting edit &lt;strong&gt;B&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Installation&lt;/h2&gt;
&lt;p&gt;You can install Git on for the following systems:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;macOS&lt;/li&gt;
&lt;li&gt;Linux / Unix&lt;/li&gt;
&lt;li&gt;Windows&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can download Git &lt;a href=&quot;https://git-scm.com/downloads&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Basic Git Commands&lt;/h2&gt;
&lt;p&gt;Once installed we will move to the command line interface (CLI). You can quickly access the CLI on the following systems:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Terminal on macOS&lt;/li&gt;
&lt;li&gt;Terminal on Linux / Unix&lt;/li&gt;
&lt;li&gt;Command Prompt Windows&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Let’s verify that you’ve successfully installed Git with the following command.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;git &lt;span class=&quot;token operator&quot;&gt;--&lt;/span&gt;version&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If successfully installed, Git will return the following message:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;git version &lt;strong&gt;version_number&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;If you don’t receive this message, you try following the installation guide &lt;a href=&quot;https://git-scm.com/book/en/v2/Getting-Started-Installing-Git&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;Set your user name and email address.&lt;/h4&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;git config &lt;span class=&quot;token operator&quot;&gt;--&lt;/span&gt;global user&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;name &lt;span class=&quot;token string&quot;&gt;&quot;USERNAME&quot;&lt;/span&gt;
git config &lt;span class=&quot;token operator&quot;&gt;--&lt;/span&gt;global user&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;email &lt;span class=&quot;token string&quot;&gt;&quot;EMAIL@EXAMPLE.COM&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;To start a new local repository.&lt;/h4&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;git init&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;To add a file and to add more than one file.&lt;/h4&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;git add &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;filename or directory name&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
git add &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;Record the changes made to the files to a local repository with a message.&lt;/h4&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;git commit &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;m &lt;span class=&quot;token string&quot;&gt;&quot;Commit message in quotes.&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;Return the current state of the repository.&lt;/h4&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;git status&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;Create a local working copy of an existing remote repository.&lt;/h4&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;git clone &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;remote_URL&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;Fetch and merge changes on the remote server to your working directory.&lt;/h4&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;git pull&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;Send changes to the master branch of your repository.&lt;/h4&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;git push origin master&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;Connect to a remote repository.&lt;/h4&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;git remote add origin &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;server&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;List all currently configured repositories.&lt;/h4&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;git remote &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;v&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;Create a new branch and switch to it.&lt;/h4&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;git checkout &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;b &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;branchname&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;Switch to another branch.&lt;/h4&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;git checkout &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;branchname&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;Replace the changes in your working tree with the last content in head.&lt;/h4&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;git checkout &lt;span class=&quot;token operator&quot;&gt;--&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;filename&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;List the current branch you’re in and the others in your repository.&lt;/h4&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;git branch&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;Delete a branch.&lt;/h4&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;git branch &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;d &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;branchname&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;Merge a different branch into your active branch.&lt;/h4&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;git merge &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;branchname&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;Push the branch to your remote repository so others can use it.&lt;/h4&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;git push origin &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;branchname&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;Save changes made when they’re not in a state to commit.&lt;/h4&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;git stash &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;u&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Terminology&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Commit&lt;/strong&gt;: Git thinks of its data like a set of snapshots. Every time you commit, it takes a ‘picture’ of what all your files look like at that moment and stores a reference to that snapshot. Each commit has a unique ID.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Repository / Repo&lt;/strong&gt;: A repository is a directory which contains your project work, as well as a few files which are used to communicate with Git. Repositories can exist either locally on your computer or as a remote copy on another computer. A repository is made up of commits.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Working Directory&lt;/strong&gt;: The working directory are the files that you see in your computer’s file system. When you open your project files up on a code editor, you’re working with files in the working directory.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Checkout&lt;/strong&gt;: A checkout is when content in the repository has been copied to the working directory.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Staging Area / Staging Index / Index&lt;/strong&gt;: A file in the Git directory that stores information about what will go into your next commit. You can think of the staging area as a prep table where Git will take the next commit. Files on the staging index are poised to be added to the repository.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;SHA&lt;/strong&gt;: SHA is short for “Secure Hash Algorithm”. A SHA is a basically an ID number for each commit. Here’s what a commit’s SHA might look like:
&lt;code class=&quot;language-text&quot;&gt;e2adf8ae3e2e4ed40add75cc44cf9d0a869afeb6&lt;/code&gt;.
It is a 40 character string compose of characters (0-9 and a-f) and calculated based on the of a file or directory structure in Git.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Branch&lt;/strong&gt;: A branch is when a new line of development is created that diverges from the main line of development can continue without altering the main line.&lt;/p&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Git is a very powerful tool for any developer, junior or senior. It helps maintain track of the progress you’ve made and even lets you go back to a specific point if any mistakes were made. Being able to use Git in your command line allows you to make significant changes to your remote repository with just a couple lines. Understanding what changes you’re making also helps avoid making any mistakes that might not be necessary. Hopefully this short blog helps you along your development journey. Feel free to connect with me on &lt;a href=&quot;https://www.linkedin.com/in/vnestor/&quot;&gt;LinkedIn&lt;/a&gt; if you ever want to get in touch!&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Retrieving Reviews Using The Google Places API]]></title><description><![CDATA[Prequel When working on a website for a small business, I wanted to have a reviews section for their website I was building using React.js…]]></description><link>https://vnestor.github.io/personal-blog/my-first-post/</link><guid isPermaLink="false">https://vnestor.github.io/personal-blog/my-first-post/</guid><pubDate>Tue, 08 Mar 2022 00:00:00 GMT</pubDate><content:encoded>&lt;h2&gt;Prequel&lt;/h2&gt;
&lt;p&gt;When working on a website for a small business, I wanted to have a reviews section for their website I was building using React.js. At first, I thought all I had to do was sign up for Google Cloud, get an API key, then make an API request, and I’d be done. That was not the case. Getting reviews from Google can be much simpler if you’re working with a CMS that have plugins readily available, like WordPress. This situation did not call for that, and I thought the task would be simple enough that I didn’t need to install an npm package. So I thought I’d try to figure it on my own and quickly realized that was not the case.&lt;/p&gt;
&lt;h2&gt;Getting Started&lt;/h2&gt;
&lt;p&gt;First, I needed to learn where I can get reviews from a small business that is on Google. I turned to the Google Places API because it is returns most information about a business that are registered with Google, including reviews. &lt;strong&gt;Note: Google Places only provide the five most recent reviews, if you need more, you might want to look elsewhere&lt;/strong&gt;. In order to get retrieve data using the API you will need two things, an API key and the Place ID of the business you’d like to get reviews for.&lt;/p&gt;
&lt;h2&gt;Getting an API Key&lt;/h2&gt;
&lt;p&gt;You will need to do the following to get an API key:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Create a Google Cloud Account.&lt;/li&gt;
&lt;li&gt;Create a project.&lt;/li&gt;
&lt;li&gt;Enable billing. (&lt;em&gt;Google Cloud provides $300 in free credits but will need a card on file.&lt;/em&gt;)&lt;/li&gt;
&lt;li&gt;Enable the Places API.&lt;/li&gt;
&lt;li&gt;Go to the Credentials section on the Google Cloud dashboard, at the top of the screen you should see &lt;strong&gt;+Create Credentials&lt;/strong&gt; and generate an API key.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;That’s it for generating an API key! This was a simple overview of the process. For a step by step process, click &lt;a href=&quot;https://developers.google.com/maps/documentation/places/web-service/cloud-setup&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Understanding the Places API&lt;/h2&gt;
&lt;p&gt;We will be using the Places API with the following URL:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token literal-property property&quot;&gt;https&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;maps&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;googleapis&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;com&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;maps&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;api&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;place&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;details&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;json&lt;span class=&quot;token operator&quot;&gt;?&lt;/span&gt;place_id&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token constant&quot;&gt;PLACE_ID&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;amp;&lt;/span&gt;key&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token constant&quot;&gt;YOUR_API_KEY&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will return a very large JSON file, but don’t worry because what we want is at the very end of it.
So we have our API key, now we need the Place ID. The Place ID is a unique ID that Google uses to identify a place in the Google Places database and on Google Maps. The URL above requires the place ID of the business you would like to retrieve reviews from.&lt;/p&gt;
&lt;h3&gt;Option 1&lt;/h3&gt;
&lt;p&gt;Fortunately, Google has a web service that will easily retrieve the ID for you, you can find that &lt;a href=&quot;https://developers.google.com/maps/documentation/places/web-service/place-id&quot;&gt;here&lt;/a&gt;. Sometimses the web service is down so there is another option.&lt;/p&gt;
&lt;h3&gt;Option 2&lt;/h3&gt;
&lt;p&gt;You can also retrieve the Place ID on Google Chrome by searching for the business on Google, ensure that the business appears on the right hand side, then right click, select &lt;em&gt;inspect&lt;/em&gt;, and search for “data-pid”. It is a string of random numbers and characters and should look something like this:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;data&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;pid&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;PLACE_ID&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Great! Now you have the Place ID and your API key, let’s start making GET requests!&lt;/p&gt;
&lt;h2&gt;Making the API Call&lt;/h2&gt;
&lt;p&gt;As I mentioned earlier, I will be using React.js to make the GET request, so we will be using &lt;em&gt;React Hooks&lt;/em&gt; and &lt;em&gt;fetch&lt;/em&gt;. Below is a simple version of how I fetched the data from the Places API in my Reviews component. I will not get into detail about what each part of my code does. &lt;strong&gt;This is for educational purposes only, if you are going to deploy an application using API Keys, make sure they are hidden.&lt;/strong&gt; If you are learning React, and not familiar with Hooks, check out React’s &lt;a href=&quot;https://reactjs.org/docs/hooks-intro.html&quot;&gt;intro to hooks&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;
&lt;span class=&quot;token operator&quot;&gt;...&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token function-variable function&quot;&gt;Reviews&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;isLoading&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; setIsLoading&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;useState&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;data&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; setData&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;useState&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;token function&quot;&gt;useEffect&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token function&quot;&gt;getReviews&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token function-variable function&quot;&gt;getReviews&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token function&quot;&gt;fetch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;https://maps.googleapis.com/maps/api/place/details/json?place_id=PLACE_ID&amp;amp;key=YOUR_API_KEY&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; res&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token function&quot;&gt;setData&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;response&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;result&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token function&quot;&gt;setIsLoading&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token boolean&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;catch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;An Error Occured: &quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; error&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;token operator&quot;&gt;...&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;default&lt;/span&gt; Reviews&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Why Don’t We Have Access To This data?&lt;/h3&gt;
&lt;p&gt;What I want to focus on is what happens when this fetch request is made. Take a look at your console (make sure you’re using console.log), and you run into an error. If you make fetch requests often you’ve probably seen this before:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;No &lt;span class=&quot;token string&quot;&gt;&apos;Access-Control-Allow-Origin&apos;&lt;/span&gt; header is present on the requested resource&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt; Origin &lt;span class=&quot;token string&quot;&gt;&apos;http://localhost:3000&apos;&lt;/span&gt; is therefore not allowed access&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You might be thinking to yourself, I have an API key, why isn’t my code working? And the answer is, it is. If you take the same URL, with the parameters filled in, and use something like &lt;a href=&quot;https://www.postman.com/&quot;&gt;Postman&lt;/a&gt;, you will get a JSON response back. Without getting too into it, the reason it is working with Postman and not your code is because of Cross-Origin Resource Sharing, better known as &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS&quot;&gt;CORS&lt;/a&gt;. CORS is a server-side configuration which clients, like your browser, choose to enforce and other developments tools, like Postman, choose to not enforce.&lt;/p&gt;
&lt;h2&gt;The Solution, Kind Of&lt;/h2&gt;
&lt;p&gt;When looking online for a solution, all I found was&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“add an HTTP header to the server: Access-Control-Allow-Origin: *”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;and you’d be done. Because we want to access data from Google’s servers, we can’t add an HTTP header since it is not our server. Also adding the request headers to our fetch function will not work either because Google’s server does not allow certain methods to be called without authorization.&lt;/p&gt;
&lt;h3&gt;Installing and Using A CORS Proxy&lt;/h3&gt;
&lt;p&gt;So how do we get the response we were expecting? We use a CORS proxy! A CORS proxy will add the neccesary CORS headers to the proxied request. The proxy we will be using is &lt;a href=&quot;https://github.com/Rob--W/cors-anywhere/&quot;&gt;CORS Anywhere&lt;/a&gt;. Keep in mind, we will be making our own CORS proxy, so make sure you have &lt;a href=&quot;https://git-scm.com/&quot;&gt;git&lt;/a&gt; and &lt;a href=&quot;https://devcenter.heroku.com/articles/heroku-cli_&quot;&gt;heroku cli&lt;/a&gt; installed. Once installed follow these instructions:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;git clone https&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;github&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;com&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;Rob&lt;span class=&quot;token operator&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;token constant&quot;&gt;W&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;cors&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;anywhere&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;git
cd cors&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;anywhere&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;
npm install
heroku create
git push heroku master&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Once done, your new heroku project will be running and you will be using the url it is being hosted on.
It should look like this:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This is only an example, do not use this URL. Use your own.&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token literal-property property&quot;&gt;https&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;token regex&quot;&gt;&lt;span class=&quot;token regex-delimiter&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;token regex-source language-regex&quot;&gt;cryptic-headland-94862.herokuapp.com&lt;/span&gt;&lt;span class=&quot;token regex-delimiter&quot;&gt;/&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You will need this URL to be appended to the request URL, and then making the GET request on that new URL.
It will looks like this:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token literal-property property&quot;&gt;https&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;cryptic&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;headland&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;94862&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;herokuapp&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;com&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;https&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;maps&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;googleapis&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;com&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;maps&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;api&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;place&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;details&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;json&lt;span class=&quot;token operator&quot;&gt;?&lt;/span&gt;place_id&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token constant&quot;&gt;PLACE_ID&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;amp;&lt;/span&gt;key&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token constant&quot;&gt;YOUR_API_KEY&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This doesn’t look great, but we can always seperate them and append them later.&lt;/p&gt;
&lt;p&gt;The final result should look something like this:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;
&lt;span class=&quot;token operator&quot;&gt;...&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token constant&quot;&gt;CORS_PROXY_URL&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;https://cryptic-headland-94862.herokuapp.com/&quot;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token constant&quot;&gt;GOOGLE_URL&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;https://maps.googleapis.com/maps/api/place/details/json?place_id=PLACE_ID&amp;amp;key=YOUR_API_KEY&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token function-variable function&quot;&gt;Reviews&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;isLoading&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; setIsLoading&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;useState&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;data&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; setData&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;useState&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;token function&quot;&gt;useEffect&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token function&quot;&gt;getReviews&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token function-variable function&quot;&gt;getReviews&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token function&quot;&gt;fetch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token constant&quot;&gt;CORS_PROXY_URL&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token constant&quot;&gt;GOOGLE_URL&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; res&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token function&quot;&gt;setData&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;response&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;result&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token function&quot;&gt;setIsLoading&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token boolean&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;catch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;An Error Occured: &quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; error&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;token operator&quot;&gt;...&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;default&lt;/span&gt; Reviews&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you’re having trouble installing and setting up your own CORS proxy, or want a better understanding on what is happening, please refer to a great explanation &lt;a href=&quot;https://stackoverflow.com/questions/43871637/no-access-control-allow-origin-header-is-present-on-the-requested-resource-whe/43881141#43881141&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Limitations &amp;#x26; Conclusion&lt;/h2&gt;
&lt;p&gt;Great! Now we have a JSON response on our browser and can work with the data the way we want to. Are we done? Maybe. A CORS proxy is a great tool to use when you need access to JSON data on the fly. Should you deploy your application using a CORS proxy? That depends on what your use case is. You should only be using a CORS proxy you trust. You also shouldn’t be using a CORS proxy if you requesting private data through HTTP responses. You can find more out about the downsides of using a CORS proxy &lt;a href=&quot;https://httptoolkit.tech/blog/cors-proxies/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Thank you for checking out what I had to say. I hope this blog post gave you a little more insight on CORS proxies and what they can do.&lt;/p&gt;</content:encoded></item></channel></rss>